{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyON45tJGW8PMBO7wejMRwQw"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# ***1. Mengekstrak isi dari zip file dan Membersihkan pdf. menjadi txt.***"],"metadata":{"id":"rvcsh5VvvL3P"}},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qP9oUOB7mxOG","executionInfo":{"status":"ok","timestamp":1751088598264,"user_tz":-420,"elapsed":39,"user":{"displayName":"Nur Fajrin","userId":"17554119474978979942"}},"outputId":"51b10781-af5f-40bd-eee4-2ca1ee547360"},"outputs":[{"output_type":"stream","name":"stdout","text":["Contents of 'raw': ['Putusan']\n","Contents of 'raw/Putusan': ['putusan_5474_k_pid.sus_2023_20240129172307.pdf', 'putusan_999_pk_pid.sus_2023_20240129172123.pdf', 'putusan_5458_k_pid.sus_2023_20240129171445.pdf', 'putusan_5513_k_pid.sus_2023_20240129171531.pdf', 'putusan_5220_k_pid.sus_2023_20240129172332.pdf', 'putusan_585_pid.sus_2020_pt_mdn_20250627111448.pdf', 'putusan_5565_k_pid.sus_2023_20240129172229.pdf', 'putusan_3550_k_pid.sus_2020_20250627110559.pdf', 'putusan_4454_k_pid.sus_2022_20240129172151.pdf', 'putusan_4815_k_pid.sus_2023_20240129171646.pdf']...\n"]}],"source":["import zipfile\n","import os\n","\n","# Define paths\n","zip_path = \"Putusan.zip\"\n","extract_path = \"raw\"\n","\n","# Extract the ZIP file\n","with zipfile.ZipFile(zip_path, 'r') as zip_ref:\n","    zip_ref.extractall(extract_path)\n","\n","# List extracted files\n","extracted_files = os.listdir(extract_path)\n","print(f\"Contents of '{extract_path}': {extracted_files}\")\n","\n","# List contents of the nested directory if it exists\n","nested_extracted_path = os.path.join(extract_path, 'Putusan')\n","if os.path.exists(nested_extracted_path):\n","    nested_files_list = os.listdir(nested_extracted_path)\n","    print(f\"Contents of '{nested_extracted_path}': {nested_files_list[:10]}...\") # Show first 10 files"]},{"cell_type":"code","source":["!pip install PyMuPDF\n","\n","import fitz  # PyMuPDF\n","import re\n","import os # Import os here as well\n","\n","# Define the path to the directory containing the PDF files\n","relative_nested_path = \"raw/Putusan/\"\n","nested_path = os.path.join(os.getcwd(), relative_nested_path)\n","\n","\n","# Get a list of files in the directory\n","nested_files = os.listdir(nested_path)\n","\n","\n","# Output directory for cleaned text files\n","output_dir = \"/mnt/data/data/raw/cleaned\"\n","os.makedirs(output_dir, exist_ok=True)\n","\n","# Simple cleaning function\n","def clean_text(text):\n","    text = re.sub(r'\\s+', ' ', text)  # Remove excessive whitespace\n","    text = re.sub(r'\\n', ' ', text) # Remove newlines\n","    text = text.strip()  # Remove leading/trailing whitespace\n","    return text\n","\n","# Convert PDF to cleaned text\n","log = []\n","for filename in nested_files:\n","    if filename.endswith('.pdf'):\n","        pdf_path = os.path.join(nested_path, filename)\n","        txt_path = os.path.join(output_dir, filename.replace('.pdf', '.txt'))\n","\n","        try:\n","            with fitz.open(pdf_path) as doc:\n","                text = \"\"\n","                for page in doc:\n","                    text += page.get_text()\n","\n","            cleaned = clean_text(text)\n","            with open(txt_path, 'w', encoding='utf-8') as f:\n","                f.write(cleaned)\n","            log.append(f\"{filename}: success\")\n","        except Exception as e:\n","            log.append(f\"{filename}: error - {str(e)}\")\n","\n","# Show a sample of the log\n","log[:10]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pX1csbwBsQ5L","executionInfo":{"status":"ok","timestamp":1751088851477,"user_tz":-420,"elapsed":4192,"user":{"displayName":"Nur Fajrin","userId":"17554119474978979942"}},"outputId":"98912a5e-5427-4cba-a112-63698c31dda9"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: PyMuPDF in /usr/local/lib/python3.11/dist-packages (1.26.1)\n"]},{"output_type":"execute_result","data":{"text/plain":["['putusan_5474_k_pid.sus_2023_20240129172307.pdf: success',\n"," 'putusan_999_pk_pid.sus_2023_20240129172123.pdf: success',\n"," 'putusan_5458_k_pid.sus_2023_20240129171445.pdf: success',\n"," 'putusan_5513_k_pid.sus_2023_20240129171531.pdf: success',\n"," 'putusan_5220_k_pid.sus_2023_20240129172332.pdf: success',\n"," 'putusan_585_pid.sus_2020_pt_mdn_20250627111448.pdf: success',\n"," 'putusan_5565_k_pid.sus_2023_20240129172229.pdf: success',\n"," 'putusan_3550_k_pid.sus_2020_20250627110559.pdf: success',\n"," 'putusan_4454_k_pid.sus_2022_20240129172151.pdf: success',\n"," 'putusan_4815_k_pid.sus_2023_20240129171646.pdf: success']"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["Mendownload hasil cleaned"],"metadata":{"id":"80jxyEEevXyn"}},{"cell_type":"code","source":["\n","from google.colab import files\n","\n","# Zip the cleaned files\n","cleaned_zip_path = \"cleaned_putusan.zip\"\n","with zipfile.ZipFile(cleaned_zip_path, 'w') as zipf:\n","    for root, _, files_to_zip in os.walk(output_dir):\n","        for file in files_to_zip:\n","            zipf.write(os.path.join(root, file), os.path.relpath(os.path.join(root, file), output_dir))\n","\n","# Download the zip file\n","files.download(cleaned_zip_path)\n"],"metadata":{"id":"KaTC4LUoufUG"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# ***2. Mengekstrak metadata pada txt.***"],"metadata":{"id":"fSF4TcaUu0Kl"}},{"cell_type":"code","source":["import pandas as pd\n","\n","# Ambil daftar file teks yang sudah dibersihkan\n","cleaned_files = os.listdir(output_dir)\n","\n","# Struktur data akhir\n","data = []\n","\n","# Fungsi ekstraksi metadata sederhana berbasis pola teks\n","def extract_metadata(text):\n","    metadata = {\n","        \"no_perkara\": None,\n","        \"tanggal\": None,\n","        \"jenis_perkara\": None,\n","        \"pasal\": None,\n","        \"pihak\": None,\n","        \"ringkasan_fakta\": None,\n","        \"text_full\": text[:1000]  # Simpan cuplikan awal (maks 1000 karakter)\n","    }\n","\n","    # Ekstraksi No. Perkara (biasa di awal atau pakai \"Nomor\" atau \"No\")\n","    match_no = re.search(r'(Nomor|No\\.?)\\s*[:\\-]?\\s*([A-Za-z0-9./-]+)', text, re.IGNORECASE)\n","    if match_no:\n","        metadata[\"no_perkara\"] = match_no.group(2)\n","\n","    # Ekstraksi tanggal (format umum: DD-MM-YYYY atau DD Month YYYY)\n","    match_date = re.search(r'(\\d{1,2}[-/]\\d{1,2}[-/]\\d{2,4})|(\\d{1,2}\\s+\\w+\\s+\\d{4})', text)\n","    if match_date:\n","        metadata[\"tanggal\"] = match_date.group(0)\n","\n","    # Jenis perkara (berdasarkan nama folder / asumsi dari nama file)\n","    metadata[\"jenis_perkara\"] = \"Pidana Khusus - Narkotika\"  # Asumsi topik proyek\n","\n","    # Ekstrak pasal (pola \"Pasal 112\" dsb)\n","    match_pasal = re.findall(r'Pasal\\s+\\d+[A-Za-z]?', text)\n","    if match_pasal:\n","        metadata[\"pasal\"] = ', '.join(set(match_pasal))\n","\n","    # Ekstraksi nama pihak (asal coba berdasarkan \"Terdakwa\"/\"Penggugat\" dst.)\n","    match_pihak = re.search(r'Terdakwa\\s*[:\\-]?\\s*(.*?)\\n', text, re.IGNORECASE)\n","    if match_pihak:\n","        metadata[\"pihak\"] = match_pihak.group(1)\n","\n","    # Ringkasan fakta awal (ambil 2-3 kalimat awal)\n","    sentences = re.split(r'(?<=[.!?]) +', text)\n","    metadata[\"ringkasan_fakta\"] = ' '.join(sentences[:3])\n","\n","    return metadata\n","\n","# Proses semua file\n","for fname in cleaned_files:\n","    fpath = os.path.join(output_dir, fname)\n","    with open(fpath, 'r', encoding='utf-8') as f:\n","        text = f.read()\n","    metadata = extract_metadata(text)\n","    metadata[\"case_id\"] = fname.replace(\".txt\", \"\")\n","    data.append(metadata)\n","\n","# Simpan ke CSV\n","df = pd.DataFrame(data)\n","processed_dir = \"/mnt/data/data/processed\"\n","os.makedirs(processed_dir, exist_ok=True)\n","csv_path = os.path.join(processed_dir, \"cases.csv\")\n","df.to_csv(csv_path, index=False)\n","\n","df.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":380},"id":"5LZ6VkaYurBe","executionInfo":{"status":"ok","timestamp":1751088809057,"user_tz":-420,"elapsed":1812,"user":{"displayName":"Nur Fajrin","userId":"17554119474978979942"}},"outputId":"26739651-4f7f-4dab-dd70-cf1c1daa147f"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  no_perkara           tanggal              jenis_perkara  \\\n","0       4454     25 April 1978  Pidana Khusus - Narkotika   \n","1        325      27 Juni 1983  Pidana Khusus - Narkotika   \n","2       5457  25 November 1970  Pidana Khusus - Narkotika   \n","3       4813   10 Agustus 1975  Pidana Khusus - Narkotika   \n","4        711       19 Mei 1974  Pidana Khusus - Narkotika   \n","\n","                                               pasal pihak  \\\n","0  Pasal 127, Pasal 197, Pasal 114, Pasal 253, Pa...  None   \n","1         Pasal 132, Pasal 127, Pasal 112, Pasal 185  None   \n","2                               Pasal 112, Pasal 127  None   \n","3                    Pasal 112, Pasal 197, Pasal 114  None   \n","4                    Pasal 112, Pasal 127, Pasal 114  None   \n","\n","                                     ringkasan_fakta  \\\n","0  hkama ahkamah Agung Repub ahkamah Agung Republ...   \n","1  hkama ahkamah Agung Repub ahkamah Agung Republ...   \n","2  hkama ahkamah Agung Repub ahkamah Agung Republ...   \n","3  hkama ahkamah Agung Repub ahkamah Agung Republ...   \n","4  hkama ahkamah Agung Repub ahkamah Agung Republ...   \n","\n","                                           text_full  \\\n","0  hkama ahkamah Agung Repub ahkamah Agung Republ...   \n","1  hkama ahkamah Agung Repub ahkamah Agung Republ...   \n","2  hkama ahkamah Agung Repub ahkamah Agung Republ...   \n","3  hkama ahkamah Agung Repub ahkamah Agung Republ...   \n","4  hkama ahkamah Agung Repub ahkamah Agung Republ...   \n","\n","                                      case_id  \n","0  putusan_4454_k_pid.sus_2022_20240129172151  \n","1   putusan_325_k_pid.sus_2020_20250627110724  \n","2  putusan_5457_k_pid.sus_2023_20240129171502  \n","3  putusan_4813_k_pid.sus_2023_20240129171919  \n","4   putusan_711_k_pid.sus_2020_20250627111027  "],"text/html":["\n","  <div id=\"df-ebe868b2-d11f-4560-a58e-6da32381f40e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>no_perkara</th>\n","      <th>tanggal</th>\n","      <th>jenis_perkara</th>\n","      <th>pasal</th>\n","      <th>pihak</th>\n","      <th>ringkasan_fakta</th>\n","      <th>text_full</th>\n","      <th>case_id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4454</td>\n","      <td>25 April 1978</td>\n","      <td>Pidana Khusus - Narkotika</td>\n","      <td>Pasal 127, Pasal 197, Pasal 114, Pasal 253, Pa...</td>\n","      <td>None</td>\n","      <td>hkama ahkamah Agung Repub ahkamah Agung Republ...</td>\n","      <td>hkama ahkamah Agung Repub ahkamah Agung Republ...</td>\n","      <td>putusan_4454_k_pid.sus_2022_20240129172151</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>325</td>\n","      <td>27 Juni 1983</td>\n","      <td>Pidana Khusus - Narkotika</td>\n","      <td>Pasal 132, Pasal 127, Pasal 112, Pasal 185</td>\n","      <td>None</td>\n","      <td>hkama ahkamah Agung Repub ahkamah Agung Republ...</td>\n","      <td>hkama ahkamah Agung Repub ahkamah Agung Republ...</td>\n","      <td>putusan_325_k_pid.sus_2020_20250627110724</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5457</td>\n","      <td>25 November 1970</td>\n","      <td>Pidana Khusus - Narkotika</td>\n","      <td>Pasal 112, Pasal 127</td>\n","      <td>None</td>\n","      <td>hkama ahkamah Agung Repub ahkamah Agung Republ...</td>\n","      <td>hkama ahkamah Agung Repub ahkamah Agung Republ...</td>\n","      <td>putusan_5457_k_pid.sus_2023_20240129171502</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4813</td>\n","      <td>10 Agustus 1975</td>\n","      <td>Pidana Khusus - Narkotika</td>\n","      <td>Pasal 112, Pasal 197, Pasal 114</td>\n","      <td>None</td>\n","      <td>hkama ahkamah Agung Repub ahkamah Agung Republ...</td>\n","      <td>hkama ahkamah Agung Repub ahkamah Agung Republ...</td>\n","      <td>putusan_4813_k_pid.sus_2023_20240129171919</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>711</td>\n","      <td>19 Mei 1974</td>\n","      <td>Pidana Khusus - Narkotika</td>\n","      <td>Pasal 112, Pasal 127, Pasal 114</td>\n","      <td>None</td>\n","      <td>hkama ahkamah Agung Repub ahkamah Agung Republ...</td>\n","      <td>hkama ahkamah Agung Repub ahkamah Agung Republ...</td>\n","      <td>putusan_711_k_pid.sus_2020_20250627111027</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ebe868b2-d11f-4560-a58e-6da32381f40e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ebe868b2-d11f-4560-a58e-6da32381f40e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ebe868b2-d11f-4560-a58e-6da32381f40e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-5375f581-13fb-4c4b-a456-27e4a5e7e4ee\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5375f581-13fb-4c4b-a456-27e4a5e7e4ee')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-5375f581-13fb-4c4b-a456-27e4a5e7e4ee button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","repr_error":"Out of range float values are not JSON compliant: nan"}},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["from google.colab import files\n","\n","# Download the generated CSV file\n","files.download(csv_path)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":17},"id":"EID_ngplyyk1","executionInfo":{"status":"ok","timestamp":1751088939834,"user_tz":-420,"elapsed":12,"user":{"displayName":"Nur Fajrin","userId":"17554119474978979942"}},"outputId":"afcb82fc-9fea-4e8a-c168-d43c4b558f2b"},"execution_count":14,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_acd72733-1253-4fea-8b5f-7f305e255a7f\", \"cases.csv\", 91969)"]},"metadata":{}}]},{"cell_type":"markdown","source":["# ***3. Case Retrieval***"],"metadata":{"id":"fldRbyfyxeNf"}},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","from sklearn.metrics.pairwise import cosine_similarity\n","import numpy as np\n","import json\n","\n","# Load data kasus\n","df = pd.read_csv('cases.csv')\n","\n","# Gunakan kolom 'ringkasan_fakta' sebagai representasi teks\n","documents = df['ringkasan_fakta'].fillna('').tolist()\n","\n","# Buat vektor TF-IDF\n","vectorizer = TfidfVectorizer()\n","doc_vectors = vectorizer.fit_transform(documents)\n","\n","# Simpan case_id ke dalam list\n","case_ids = df['case_id'].tolist()\n","\n","# Fungsi retrieve\n","def retrieve(query: str, k: int = 5):\n","    query_vec = vectorizer.transform([query])\n","    sim_scores = cosine_similarity(query_vec, doc_vectors).flatten()\n","    top_k_idx = np.argsort(sim_scores)[::-1][:k]\n","    top_k_ids = [case_ids[i] for i in top_k_idx]\n","    return top_k_ids, sim_scores[top_k_idx]\n","\n","# Contoh uji: 5 query\n","queries = [\n","    {\"query_id\": \"Q1\", \"query\": \"Terdakwa menyimpan sabu dalam bungkus plastik\"},\n","    {\"query_id\": \"Q2\", \"query\": \"Terdakwa menggunakan narkotika jenis ganja\"},\n","    {\"query_id\": \"Q3\", \"query\": \"Pengedar narkotika dengan barang bukti 3 gram sabu\"},\n","    {\"query_id\": \"Q4\", \"query\": \"Menjual narkoba tanpa izin resmi\"},\n","    {\"query_id\": \"Q5\", \"query\": \"Kepemilikan narkotika oleh anak di bawah umur\"},\n","]\n","\n","# Simpan hasil ke file JSON\n","eval_results = []\n","for q in queries:\n","    top_ids, _ = retrieve(q[\"query\"], k=5)\n","    eval_results.append({\n","        \"query_id\": q[\"query_id\"],\n","        \"query\": q[\"query\"],\n","        \"top_5_case_ids\": top_ids\n","    })\n","\n","# Simpan ke file JSON\n","os.makedirs('./data/eval', exist_ok=True)\n","with open('./data/eval/queries.json', 'w', encoding='utf-8') as f:\n","    json.dump(eval_results, f, indent=2, ensure_ascii=False)\n","\n","print(\"✅ Retrieval selesai. Hasil disimpan di: /data/eval/queries.json\")\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SCLIS_A_xeaD","executionInfo":{"status":"ok","timestamp":1751089016644,"user_tz":-420,"elapsed":673,"user":{"displayName":"Nur Fajrin","userId":"17554119474978979942"}},"outputId":"109abf2b-bae9-466d-9ac6-09dddacaabee"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["✅ Retrieval selesai. Hasil disimpan di: /data/eval/queries.json\n"]}]},{"cell_type":"markdown","source":["# ***4. Solution Reuse***"],"metadata":{"id":"i32n9NqDzgPc"}},{"cell_type":"code","source":["import pandas as pd\n","import json\n","from collections import Counter\n","\n","# Load data kasus\n","df_cases = pd.read_csv('cases.csv')\n","case_text_map = dict(zip(df_cases['case_id'], df_cases['text_full']))\n","\n","# Simulasi: Ambil kalimat berisi amar putusan sebagai \"solusi\"\n","def extract_amar(text):\n","    for line in text.split('.'):\n","        if 'menjatuhkan pidana' in line.lower() or 'dijatuhi hukuman' in line.lower():\n","            return line.strip()\n","    return \"Amar putusan tidak ditemukan\"\n","\n","# Bangun dictionary solusi\n","case_solutions = {cid: extract_amar(text) for cid, text in case_text_map.items()}\n","\n","# Fungsi majority voting\n","def predict_outcome(query: str):\n","    top_k, _ = retrieve(query, k=5)  # menggunakan fungsi dari Tahap 3\n","    solusi_top_k = [case_solutions.get(cid, \"\") for cid in top_k]\n","    solusi_terpilih = Counter(solusi_top_k).most_common(1)[0][0]\n","    return solusi_terpilih, top_k\n","\n","# Uji prediksi pada 5 query sebelumnya\n","with open('./data/eval/queries.json', 'r', encoding='utf-8') as f:\n","    queries = json.load(f)\n","\n","predictions = []\n","for q in queries:\n","    predicted_solution, top_cases = predict_outcome(q['query'])\n","    predictions.append({\n","        \"query_id\": q['query_id'],\n","        \"predicted_solution\": predicted_solution,\n","        \"top_5_case_ids\": top_cases\n","    })\n","\n","# Simpan hasil prediksi ke CSV\n","df_pred = pd.DataFrame(predictions)\n","os.makedirs('./data/results', exist_ok=True)\n","df_pred.to_csv('./data/results/predictions.csv', index=False)\n","\n","print(\"✅ Prediksi selesai. Hasil disimpan di: /data/results/predictions.csv\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VWlnUD9uzgo0","executionInfo":{"status":"ok","timestamp":1751089126949,"user_tz":-420,"elapsed":16,"user":{"displayName":"Nur Fajrin","userId":"17554119474978979942"}},"outputId":"fea27544-25fe-49e5-e378-64f8e4860feb"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["✅ Prediksi selesai. Hasil disimpan di: /data/results/predictions.csv\n"]}]},{"cell_type":"markdown","source":["# ***5. Evaluasi Retrieval & Prediksi***"],"metadata":{"id":"AwRQuutxz0mz"}},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.metrics import precision_score, recall_score, f1_score\n","\n","# --------------------\n","# Simulasi: Buat ground truth manual\n","# (Ganti dengan file sebenarnya jika ada label hasil putusan)\n","ground_truth_data = {\n","    \"Q1\": \"Terdakwa dijatuhi pidana penjara selama 5 tahun\",\n","    \"Q2\": \"Terdakwa dijatuhi hukuman 4 tahun penjara\",\n","    \"Q3\": \"Menjatuhkan pidana kepada terdakwa selama 6 tahun\",\n","    \"Q4\": \"Menjatuhkan pidana 3 tahun dan denda\",\n","    \"Q5\": \"Amar putusan tidak ditemukan\"\n","}\n","\n","# --------------------\n","# Load hasil prediksi\n","df_pred = pd.read_csv('./data/results/predictions.csv')\n","\n","# Bandingkan prediksi dengan label manual\n","y_true = []\n","y_pred = []\n","\n","for _, row in df_pred.iterrows():\n","    qid = row['query_id']\n","    pred = row['predicted_solution']\n","    true = ground_truth_data.get(qid, \"\")\n","\n","    # Jika isi kalimat putusan mirip → anggap benar\n","    if true in pred or pred in true:\n","        y_true.append(1)\n","        y_pred.append(1)\n","    else:\n","        y_true.append(1)\n","        y_pred.append(0)\n","\n","# Hitung metrik\n","precision = precision_score(y_true, y_pred)\n","recall = recall_score(y_true, y_pred)\n","f1 = f1_score(y_true, y_pred)\n","accuracy = sum([1 if a == b else 0 for a, b in zip(y_true, y_pred)]) / len(y_true)\n","\n","# Simpan hasil evaluasi\n","eval_df = pd.DataFrame([{\n","    \"Accuracy\": accuracy,\n","    \"Precision\": precision,\n","    \"Recall\": recall,\n","    \"F1-Score\": f1\n","}])\n","eval_df.to_csv('./data/eval/prediction_metrics.csv', index=False)\n","\n","print(\"✅ Evaluasi selesai. Hasil disimpan di: /data/eval/prediction_metrics.csv\")\n","print(eval_df)\n","\n","eval_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":141},"id":"fhtL84Hszty8","executionInfo":{"status":"ok","timestamp":1751090785379,"user_tz":-420,"elapsed":16,"user":{"displayName":"Nur Fajrin","userId":"17554119474978979942"}},"outputId":"d83cc7b8-f512-47ae-ea75-58f77a79daeb"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["✅ Evaluasi selesai. Hasil disimpan di: /data/eval/prediction_metrics.csv\n","   Accuracy  Precision  Recall  F1-Score\n","0       0.2        1.0     0.2  0.333333\n"]},{"output_type":"execute_result","data":{"text/plain":["   Accuracy  Precision  Recall  F1-Score\n","0       0.2        1.0     0.2  0.333333"],"text/html":["\n","  <div id=\"df-7154edd3-3da5-4950-beee-2be0989f4ba4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Accuracy</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","      <th>F1-Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.2</td>\n","      <td>1.0</td>\n","      <td>0.2</td>\n","      <td>0.333333</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7154edd3-3da5-4950-beee-2be0989f4ba4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7154edd3-3da5-4950-beee-2be0989f4ba4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7154edd3-3da5-4950-beee-2be0989f4ba4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","  <div id=\"id_56e5ea95-6322-4789-a6e1-593950ebdb32\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('eval_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_56e5ea95-6322-4789-a6e1-593950ebdb32 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('eval_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"eval_df","summary":"{\n  \"name\": \"eval_df\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"Accuracy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.2,\n        \"max\": 0.2,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Precision\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Recall\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.2,\n        \"max\": 0.2,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"F1-Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.3333333333333333,\n        \"max\": 0.3333333333333333,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.3333333333333333\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":26}]}]}